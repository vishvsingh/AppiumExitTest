<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-06-02T11:03:43 IST" name="Default suite" finished-at="2022-06-02T11:05:29 IST" duration-ms="105430">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestRunner@1de5f259]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2022-06-02T11:03:43 IST" name="Default test" finished-at="2022-06-02T11:05:29 IST" duration-ms="105430">
      <class name="Runner.TestRunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:Runner.TestRunner@1de5f259]" started-at="2022-06-02T11:03:43 IST" name="setUpClass" finished-at="2022-06-02T11:03:44 IST" duration-ms="425" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestRunner@1de5f259]" started-at="2022-06-02T11:03:44 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-06-02T11:04:08 IST" duration-ms="24396" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Reversing test of animation section"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Animation test of APIDEMO apk]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestRunner@1de5f259]" started-at="2022-06-02T11:04:08 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-06-02T11:04:29 IST" duration-ms="21049" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Action Bar test in App section"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[App testing of Apidemo apk]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestRunner@1de5f259]" started-at="2022-06-02T11:04:29 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-06-02T11:04:50 IST" duration-ms="21010" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Assets testing in content section"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Content testing in APi Demo apk]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestRunner@1de5f259]" started-at="2022-06-02T11:04:50 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-06-02T11:05:11 IST" duration-ms="20846" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Arc Testing for graphics screen"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Graphics test for API DEMO Application]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:Runner.TestRunner@1de5f259]" started-at="2022-06-02T11:05:11 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2022-06-02T11:05:28 IST" duration-ms="16946" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["vedioview testing  in media section"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Media testing for Api DEMO apk]"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Media/VedeoView] but found [Media/VideoView]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Media/VedeoView] but found [Media/VideoView]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at StepDefinition.MediaStep.it_would_be_on_expected_page(MediaStep.java:39)
at âœ½.It would be on expected page(file:///C:/Users/arnabsau/Downloads/shyam/API_Exittest/./src/test/java/Features/Media_video_view.feature:9)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:Runner.TestRunner@1de5f259]" started-at="2022-06-02T11:05:28 IST" name="tearDownClass" finished-at="2022-06-02T11:05:29 IST" duration-ms="713" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- Runner.TestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
